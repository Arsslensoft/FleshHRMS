<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit2.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        umv+jp8+MwDfcPJ2+C3UfpPn7PFf/9k=
</value>
  </data>
</root>